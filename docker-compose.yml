version: '3.8'

services:
  ######################################################################################################################
  #
  #   api gateway
  #
  ######################################################################################################################
  traefik:
    image: traefik:v2.9
    container_name: "traefik"
    networks:
      - syctone
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      #- "--entryPoints.metrics.address=:8082"
      #- "--metrics.prometheus.entryPoint=metrics"
      #- "--metrics.prometheus.addrouterslabels=true"
      #- "--metrics.prometheus.addServicesLabels=true"
    ports:
      - "80:80"  # The HTTP port
      - "8080:8080" # The Web UI (enabled by --api.insecure=true)
      #- "8082:8082" # The prometheus port
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


  ######################################################################################################################
  #
  #   iam services
  #
  ######################################################################################################################
  php-iam:
    build:
      context: ./docker/php-swoole
      dockerfile: Dockerfile
    container_name: "iam-service"
    networks:
      - syctone
    depends_on:
      - db-iam
      #- mbroker
    volumes:
      - "./iam:/app"
    environment:
      APP_ENV: "dev"
      APP_DEBUG: "true"
      DATABASE_URL: pgsql://ecotone:ecotone@db-iam:5432/ecotone
      ENQUEUE_DSN: amqp+ext://rabbit-user:rabbit-password@mbroker:5672/%2f
      APP_RUNTIME: Zerai\OpenSwoole\Runtime
      SWOOLE_HOST: ${SWOOLE_HOST-0.0.0.0}
      SWOOLE_PORT: ${SWOOLE_PORT-80}
      SWOOLE_HOT_RELOAD: 1
    command: "php /app/public/index.php"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=syctone"
      - "traefik.http.routers.php-iam.entrypoints=web"
      - "traefik.http.routers.php-iam.rule=Host(`iam.localtest.me`)"
      - "traefik.http.services.php-iam.loadbalancer.server.port=80"

  db-iam:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ecotone}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ecotone}
      POSTGRES_USER: ${POSTGRES_USER:-ecotone}

#  openapi-iam:
#    image: redocly/openapi-cli
#    ports:
#      - "8011:80"
#    volumes:
#      - "./iam/docs/api/v1:/spec"
#    command: ["preview-docs", "-h", "0.0.0.0", "-p", "80", "openapi.yaml"]

  ######################################################################################################################
  #
  #   blu services
  #
  ######################################################################################################################

  php-blue:
    build:
      context: ./docker/php-swoole
      dockerfile: Dockerfile
    networks:
      - syctone
    depends_on:
      - db-blue
      #- mbroker
    volumes:
      - "./blue:/app"
    environment:
      APP_ENV: "dev"
      APP_DEBUG: "true"
      DATABASE_DSN: pgsql://ecotone:ecotone@db-blue:5432/ecotone
      ENQUEUE_DSN: amqp+ext://rabbit-user:rabbit-password@mbroker:5672/%2f
      # -- Swoole runtime envs
      APP_RUNTIME: Zerai\OpenSwoole\Runtime
      SWOOLE_HOST: ${SWOOLE_HOST-0.0.0.0}
      SWOOLE_PORT: ${SWOOLE_PORT-80}
      SWOOLE_HOT_RELOAD: 1
      # -- Workerman runtime envs
#      APP_RUNTIME: Manyou\WorkermanSymfonyRuntime\Runtime
#      PORT: 80
#      LOGFILE: /app/var/workerman.log
    command: "php /app/public/index.php start"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=syctone"
      - "traefik.http.routers.php-blue.entrypoints=web"
      - "traefik.http.routers.php-blue.rule=Host(`blue.localtest.me`)"
      - "traefik.http.services.php-blue.loadbalancer.server.port=80"

  db-blue:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    ports:
      - "5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ecotone}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ecotone}
      POSTGRES_USER: ${POSTGRES_USER:-ecotone}

#  openapi-blue:
#    image: redocly/openapi-cli
#    ports:
#      - "8021:80"
#    volumes:
#      - "./blue/docs/api/v1:/spec"
#    command: ["preview-docs", "-h", "0.0.0.0", "-p", "80", "openapi.yaml"]

  ########################################################################################################################
  #
  #   red services
  #
  ########################################################################################################################

  php-red:
    build:
      context: ./docker/php-cli
      dockerfile: Dockerfile
    networks:
      - syctone
    depends_on:
      - db-red
    volumes:
      - "./red:/app"
    environment:
      APP_ENV: "dev"
      APP_DEBUG: "true"
      DATABASE_DSN: pgsql://ecotone:ecotone@db-red:5432/ecotone?serverVersion=13&charset=utf8"
      ENQUEUE_DSN: amqp+ext://rabbit-user:rabbit-password@mbroker:5672/%2f
      # -- Workerman runtime envs
      #APP_RUNTIME: Manyou\WorkermanSymfonyRuntime\Runtime
      #PORT: 80
      #LOGFILE: /app/var/workerman.log
      # -- Swoole runtime envs
      APP_RUNTIME: Zerai\OpenSwoole\Runtime
      SWOOLE_HOST: ${SWOOLE_HOST-0.0.0.0}
      SWOOLE_PORT: ${SWOOLE_PORT-80}
      SWOOLE_HOT_RELOAD: 1
    command: "php /app/public/index.php start"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=syctone"
      - "traefik.http.routers.php-red.entrypoints=web"
      - "traefik.http.routers.php-red.rule=Host(`red.localtest.me`)"
      - "traefik.http.services.php-red.loadbalancer.server.port=80"

  db-red:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    ports:
      - "5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ecotone}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ecotone}
      POSTGRES_USER: ${POSTGRES_USER:-ecotone}

#  openapi-red:
#    image: redocly/openapi-cli
#    ports:
#      - "8031:80"
#    volumes:
#      - "./red/docs/api/v1:/spec"
#    command: ["preview-docs", "-h", "0.0.0.0", "-p", "80", "openapi.yaml"]

#########################################################################################################################
##
##   infra services
##
#########################################################################################################################

#  mbroker:
#    image: rabbitmq:3-management
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    environment:
#      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
#      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-rabbit-user}
#      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-rabbit-password}
#      RABBITMQ_DEFAULT_VHOST: "/"

#  pgadmin:
#    image: dpage/pgadmin4:6.2
#    ports:
#      - "8181:80"
#    environment:
#      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
#      PGADMIN_DEFAULT_PASSWORD: "admin"

networks:
  syctone: ~
