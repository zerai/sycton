services:
######################################################################################################################
#
#   iam services
#
######################################################################################################################
  php-iam:
    profiles: [ iam, all ]
    build:
      context: ./docker/php-swoole
      dockerfile: Dockerfile
    container_name: "iam-service"
    networks:
      - syctone
    depends_on:
      main-database:
        condition: service_healthy
        restart: false
    volumes:
      - "./iam:/app"
    environment:
      APP_ENV: "dev"
      APP_DEBUG: "true"
      DATABASE_URL: pgsql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@main-database:5432/iam
      ENQUEUE_DSN: amqp+ext://rabbit-user:rabbit-password@mbroker:5672/%2f
      APP_RUNTIME: Zerai\OpenSwoole\Runtime
      SWOOLE_HOST: ${SWOOLE_HOST-0.0.0.0}
      SWOOLE_PORT: ${SWOOLE_PORT-80}
      SWOOLE_HOT_RELOAD: 1
    command: "php /app/public/index.php"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=syctone"
      - "traefik.http.routers.php-iam.entrypoints=websecure"
      - "traefik.http.routers.php-iam.rule=Host(`iam.localtest.me`)"
      - "traefik.http.services.php-iam.loadbalancer.server.port=80"

      - "traefik.http.routers.php-iam.tls=true"
      - "traefik.http.routers.php-iam.tls.domains[0].main=iam.localtest.me"
      - "traefik.http.routers.php-iam.tls.domains[0].sans=iam-dev.localtest.me,iam-test.localtest.me"

  openapi-iam:
    profiles: [ iam, all ]
    image: redocly/openapi-cli
    networks:
      - syctone
    volumes:
      - "./iam/docs/api/v1:/spec"
    command: ["preview-docs", "-h", "0.0.0.0", "-p", "80", "openapi.yaml"]
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=syctone"
      - "traefik.http.routers.openapi-iam.entrypoints=web"
      - "traefik.http.routers.openapi-iam.rule=Host(`swagger.iam.localtest.me`)"
      - "traefik.http.services.openapi-iam.loadbalancer.server.port=80"

  ######################################################################################################################
  #
  #   blu services
  #
  ######################################################################################################################

  php-blue:
    profiles: [ blue, all ]
    build:
      context: ./docker/php-swoole
      dockerfile: Dockerfile
    networks:
      - syctone
    depends_on:
      main-database:
        condition: service_healthy
        restart: false
    volumes:
      - "./blue:/app"
    environment:
      APP_ENV: "dev"
      APP_DEBUG: "true"
      DATABASE_URL: pgsql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@main-database:5432/blue
      ENQUEUE_DSN: amqp+ext://rabbit-user:rabbit-password@mbroker:5672/%2f
      # -- Swoole runtime envs
      APP_RUNTIME: Zerai\OpenSwoole\Runtime
      SWOOLE_HOST: ${SWOOLE_HOST-0.0.0.0}
      SWOOLE_PORT: ${SWOOLE_PORT-80}
      SWOOLE_HOT_RELOAD: 1
      # -- Workerman runtime envs
#      APP_RUNTIME: Manyou\WorkermanSymfonyRuntime\Runtime
#      PORT: 80
#      LOGFILE: /app/var/workerman.log
    command: "php /app/public/index.php start"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=syctone"
      - "traefik.http.routers.php-blue.entrypoints=websecure"
      - "traefik.http.routers.php-blue.rule=Host(`blue.localtest.me`)"
      - "traefik.http.services.php-blue.loadbalancer.server.port=80"

      - "traefik.http.routers.php-blue.tls=true"
      - "traefik.http.routers.php-blue.tls.domains[0].main=blue.localtest.me"
      - "traefik.http.routers.php-blue.tls.domains[0].sans=blue-dev.localtest.me,blue-test.localtest.me"

  openapi-blue:
    profiles: [ blue, all ]
    image: redocly/openapi-cli
    networks:
      - syctone
    volumes:
      - "./blue/docs/api/v1:/spec"
    command: ["preview-docs", "-h", "0.0.0.0", "-p", "80", "openapi.yaml"]
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=syctone"
      - "traefik.http.routers.openapi-blue.entrypoints=web"
      - "traefik.http.routers.openapi-blue.rule=Host(`swagger.blue.localtest.me`)"
      - "traefik.http.services.openapi-blue.loadbalancer.server.port=80"

  ########################################################################################################################
  #
  #   red services
  #
  ########################################################################################################################

  php-red:
    profiles: [ red, all ]
    build:
      context: ./docker/php-cli
      dockerfile: Dockerfile
    networks:
      - syctone
    depends_on:
      main-database:
        condition: service_healthy
        restart: false
    volumes:
      - "./red:/app"
    environment:
      APP_ENV: "dev"
      APP_DEBUG: "true"
      DATABASE_URL: pgsql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@main-database:5432/red
      ENQUEUE_DSN: amqp+ext://rabbit-user:rabbit-password@mbroker:5672/%2f
      # -- Workerman runtime envs
      #APP_RUNTIME: Manyou\WorkermanSymfonyRuntime\Runtime
      #PORT: 80
      #LOGFILE: /app/var/workerman.log
      # -- Swoole runtime envs
      APP_RUNTIME: Zerai\OpenSwoole\Runtime
      SWOOLE_HOST: ${SWOOLE_HOST-0.0.0.0}
      SWOOLE_PORT: ${SWOOLE_PORT-80}
      SWOOLE_HOT_RELOAD: 1
    command: "php /app/public/index.php start"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=syctone"
      - "traefik.http.routers.php-red.entrypoints=websecure"
      - "traefik.http.routers.php-red.rule=Host(`red.localtest.me`)"
      - "traefik.http.services.php-red.loadbalancer.server.port=80"

      - "traefik.http.routers.php-red.tls=true"
      - "traefik.http.routers.php-red.tls.domains[0].main=red.localtest.me"
      - "traefik.http.routers.php-red.tls.domains[0].sans=red-dev.localtest.me,red-test.localtest.me"

  openapi-red:
    profiles: [ red, all ]
    image: redocly/openapi-cli
    networks:
      - syctone
    volumes:
      - "./red/docs/api/v1:/spec"
    command: ["preview-docs", "-h", "0.0.0.0", "-p", "80", "openapi.yaml"]
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=syctone"
      - "traefik.http.routers.openapi-red.entrypoints=web"
      - "traefik.http.routers.openapi-red.rule=Host(`swagger.red.localtest.me`)"
      - "traefik.http.services.openapi-red.loadbalancer.server.port=80"



#########################################################################################################################
#########################################################################################################################
##
##   infra services
##
#########################################################################################################################
#########################################################################################################################


######################################################################################################################
#
#   Main database instance - Postgres
#
#   All microservices  share the same 'physical' database instance,
#   but each microservice has a private schema/database.
#
######################################################################################################################

  main-database:
    profiles: [ postgres, keycloak, iam, red, blue, all ]
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    volumes:
      - ./_etc/docker/postgres:/docker-entrypoint-initdb.d
    networks:
      - syctone
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-app} -d ${POSTGRES_DB:-postgres}" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    environment:
      POSTGRES_MULTIPLE_DATABASES: keycloak,iam,red,blue
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    labels:
      - "traefik.enable=false"


######################################################################################################################
#
#   api gateway - Traefik
#
######################################################################################################################
  traefik:
    profiles: [ traefik, iam, red, blue, all ]
    image: traefik:v2.9
    container_name: "traefik"
    networks:
      - syctone
    command:
      - '--global.checknewversion=true'
      - '--global.sendanonymoususage=false'
      - "--log.level=DEBUG"
      - "--accesslog"
      - "--api"
      - "--api.dashboard=true"
      - "--api.insecure=true"

      - "--providers.docker=true"
      - "--providers.file.filename=/etc/traefik/certificates.yml"
      - "--providers.docker.exposedbydefault=true"
      #- "--providers.docker.exposedbydefault=false"
      - "--providers.docker.defaultrule=Host(`{{ normalize .Name }}.localtest.me`)"

      - "--entrypoints.web.address=:80"
      #- "--entryPoints.web.forwardedHeaders.insecure"
      - "--entrypoints.websecure.address=:443"

      #- "--entryPoints.metrics.address=:8082"
      #- "--metrics.prometheus.entryPoint=metrics"
      #- "--metrics.prometheus.addrouterslabels=true"
      #- "--metrics.prometheus.addServicesLabels=true"
    ports:
      # HTTP
      - target: 80
        published: ${HTTP_PORT:-80}
        protocol: tcp
      # HTTP
      - target: 443
        published: ${HTTPS_PORT:-443}
        protocol: tcp
    labels:
      traefik.http.routers.traefik-http.entrypoints: web
      traefik.http.routers.traefik-http.service: api@internal
      traefik.http.routers.traefik-http.rule: Host(`localtest.me`)

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "./docker/traefik:/etc/traefik"


######################################################################################################################
#
#   Authentication & Authorization - Keycloak
#
######################################################################################################################
  keycloak:
    profiles: [ keycloak, all ]
    image: keycloak/keycloak:26.0.1
    container_name: keycloak
    environment:
      KC_HOSTNAME: localhost
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://main-database/
      KC_DB_USERNAME: ${KEYCLOAK_POSTGRES_USER:-app}
      KC_DB_PASSWORD: ${KEYCLOAK_POSTGRES_PASSWORD:-!ChangeMe!}
      KC_HEALTH_ENABLED: false
      KC_METRICS_ENABLED: false
    depends_on:
      main-database:
        condition: service_healthy
        restart: false
    networks:
      - syctone
    volumes:
      - keycloak-data:/opt/jboss/keycloak/standalone/data
      - keycloak-config:/opt/jboss/keycloak/standalone/configuration
    command: ["start-dev"]
    labels:
      - "traefik.enable=false"


######################################################################################################################
#
#   Messaging & queue - RabbitMq
#
######################################################################################################################
  mbroker:
    profiles: [ rabbitmq, all ]
    image: rabbitmq:3-management
    networks:
      - syctone
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER:-rabbit-user}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS:-rabbit-password}
      RABBITMQ_DEFAULT_VHOST: "/"
    labels:
      - "traefik.enable=false"


######################################################################################################################
#
#   Database UI - PgAdmin
#
######################################################################################################################
  pgadmin:
    profiles: [ postgres-ui, all ]
    image: dpage/pgadmin4:latest
    networks:
      - syctone
    ports:
      - "8181:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - ./_etc/docker/pgAdmin/servers.json:/pgadmin4/servers.json
    labels:
      - "traefik.enable=false"


######################################################################################################################
#
#   Messaging UI - Ecotone Pulse
#
######################################################################################################################
  pulse:
    profiles: [ message-ui, all ]
    image: ecotoneframework/ecotone-pulse:0.1.0
    working_dir: "/data/app"
    networks:
      - syctone
    environment:
      SERVICES: '[{"name":"iam","databaseDsn":"pgsql://ecotone:ecotone@db-iam:5432/ecotone"},{"name":"customer","databaseDsn":"pgsql://ecotone:ecotone@db-customer:5432/ecotone"},{"name":"blue","databaseDsn":"pgsql://ecotone:ecotone@db-blue:5432/ecotone"},{"name":"red","databaseDsn":"pgsql://ecotone:ecotone@db-red:5432/ecotone"}]'
      AMQP_DSN: "amqp://guest:guest@rabbitmq:5672//"
      APP_ENV: dev
    ports:
      - 3006:80
    labels:
      - "traefik.enable=false"

networks:
  syctone: ~

volumes:
  keycloak-data:
  keycloak-config:
