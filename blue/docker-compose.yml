version: '3.8'

services:
  php:
    image: webdevops/php-nginx-dev:8.0
    ports:
      - "80:80"
      - "2222:22"
    working_dir: /app
    user: application
    volumes:
      - "./:/app"
    environment:
      APP_ENV: "dev"
      APP_DEBUG: "true"
      DATABASE_DSN: pgsql://ecotone:ecotone@pgsql:5432/ecotone
      WEB_DOCUMENT_ROOT: /app/public
      WEB_DOCUMENT_INDEX: index.php
#      PHP_DEBUGGER: xdebug
#      XDEBUG_MODE: coverage
#      XDEBUG_REMOTE_AUTOSTART: 1
#      XDEBUG_REMOTE_CONNECT_BACK: 1
#      # IMPORTANT: please change this ip address to your docker host ip. Get your docker host ip:
#      # docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' docker_php_1
#      #- XDEBUG_REMOTE_HOST=172.19.0.1
#      XDEBUG_REMOTE_PORT: 9021

  projection:
    image: webdevops/php-nginx-dev:8.0
    working_dir: /app
    user: application
    volumes:
      - "./:/app"
    environment:
      APP_ENV: "dev"
      APP_DEBUG: "true"
      DATABASE_DSN: pgsql://ecotone:ecotone@pgsql:5432/ecotone
      WEB_DOCUMENT_ROOT: /app/public
      WEB_DOCUMENT_INDEX: index.php
    command: "/app/bin/console ecotone:run asynchronous_projections -vvv"



  pgsql:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    ports:
      - "5432"
    links:
      - pgadmin
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ecotone}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ecotone}
      POSTGRES_USER: ${POSTGRES_USER:-ecotone}
      # volumes:
      # - db-data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw


  pgadmin:
    image: dpage/pgadmin4:6.2
    ports:
      - "8181:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
