name: Red service commit stage

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    inputs:
      triggering-sha:
        required: true
        type: string

defaults:
  run:
    shell: bash
    working-directory: red

env:
  # GHA SETTINGS
  USE_COMPOSER_CACHE: '1'
  USE_PHP_EXTENSION_CACHE: '1'
  # PHP SETTINGS
  PHP_EXTENSIONS: ctype, iconv, json, curl, gd, intl, opcache, openssl, mbstring, mysql, pdo_sqlite
  PHP_EXTENSIONS_CACHE_KEY: cache-php-extensions-v2
  # ARTIFACTS SETTINGS
  ARTIFATC_NAME_FOR_UNIT_TESTS_COVERAGE: '[red-service]-unit-test-coverage-reports-on-SHA'
  UNIT_TEST_CLOVER_FILENAME: 'coverage-unit-test-clover.xml'
  ARTIFATC_NAME_FOR_UNIT_TESTS_DOCUMENTATION_REPORT: '[red-service]-unit-test-docs-report-on-SHA'
  UNIT_TEST_DOC_FILENAME: 'doc-unit-test.txt'


jobs:
  unit-test:
    name: Unit tests (${{ matrix.php-version }})
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    continue-on-error: ${{ matrix.is-php-experimental }}
    strategy:
      max-parallel: 2
      matrix:
        php-version:
          - '8.1'
        is-php-experimental: [false]
        generate-coverage-report: [false]
        include:
          - php-version: '8.2'
            is-php-experimental: true
            generate-coverage-report: false
      fail-fast: true
    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Setup PHP and composer dependencies
        uses: './.github/actions/php-composer-setup'
        with:
          php-version: ${{ matrix.php-version }}
          composer-working-directory: 'red'
          php-extensions: ${{ env.PHP_EXTENSIONS }}
          extensions-cache-key:  ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
          use-php-extensions-cache: ${{ env.USE_PHP_EXTENSION_CACHE }}
          use-composer-cache: ${{ env.USE_COMPOSER_CACHE }}
          composer-install-args: '--no-interaction --prefer-dist --no-progress --ansi'

      - name: Run unit tests
        run: |
          vendor/bin/phpunit --testsuite=unit --testdox --colors=always \
          --coverage-clover $UNIT_TEST_CLOVER_FILENAME \
          --testdox-text $UNIT_TEST_DOC_FILENAME

      - name: Get Coverage artifact name
        if: ${{ matrix.generate-coverage-report }}
        id: coverage-artifact-name
        run: echo "name=$ARTIFATC_NAME_FOR_UNIT_TESTS_COVERAGE-$GITHUB_SHA" >> $GITHUB_OUTPUT

      - name: Save coverage reports
        if: ${{ matrix.generate-coverage-report }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.coverage-artifact-name.outputs.name }}
          path: ${{ env.UNIT_TEST_CLOVER_FILENAME }}

      - name: Get Test doc artifact name
        if: ${{ matrix.generate-coverage-report }}
        id: test-doc-artifact-name
        run: echo "name=$ARTIFATC_NAME_FOR_UNIT_TESTS_DOCUMENTATION_REPORT-$GITHUB_SHA" >> $GITHUB_OUTPUT

      - name: Save test doc reports
        if: ${{ matrix.generate-coverage-report }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.test-doc-artifact-name.outputs.name }}
          path: ${{ env.UNIT_TEST_DOC_FILENAME }}


  checks-composer:
    name: Validate Composer (${{ matrix.php-version }})
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    strategy:
      matrix:
        php-version:
          - '8.1'
      fail-fast: true
    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Setup PHP and composer dependencies
        uses: './.github/actions/php-composer-setup'
        with:
          php-version: ${{ matrix.php-version }}
          composer-working-directory: 'red'
          php-extensions: ${{ env.PHP_EXTENSIONS }}
          extensions-cache-key:  ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
          use-php-extensions-cache: ${{ env.USE_PHP_EXTENSION_CACHE }}
          use-composer-cache: ${{ env.USE_COMPOSER_CACHE }}
          composer-install-args: '--no-interaction --prefer-dist --no-progress --ansi'
          tools: 'composer-normalize:2.16.0'

      - name: Run composer validate
        run: |
          composer validate --strict --ansi
        continue-on-error: true

      - name: Run composer normalize
        run: |
          composer-normalize --dry-run --ansi


  validate-openapi:
    name: Validate OpenApi schema
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate red service openApi schema
        uses: mbowman100/swagger-validator-action@2.0
        with:
          files: |
            red/docs/api/v1/openapi.yaml


  coding-standard:
    name: Coding Standard (${{ matrix.php-version }})
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    strategy:
      matrix:
        php-version:
          - '8.1'
      fail-fast: true
    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Setup PHP and composer dependencies
        uses: './.github/actions/php-composer-setup'
        with:
          php-version: ${{ matrix.php-version }}
          composer-working-directory: 'red'
          php-extensions: ${{ env.PHP_EXTENSIONS }}
          extensions-cache-key:  ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
          use-php-extensions-cache: ${{ env.USE_PHP_EXTENSION_CACHE }}
          use-composer-cache: ${{ env.USE_COMPOSER_CACHE }}
          composer-install-args: '--no-interaction --prefer-dist --no-progress --ansi'

      - name: Install easy-coding-standard
        run: |
          composer bin ecs install  --no-progress --ansi

      - name: Run easy-coding-standard
        run: |
          ./vendor/bin/ecs


  psalm:
    name: Static analysis (${{ matrix.php-version }})
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    strategy:
      matrix:
        php-version:
          - '8.1'
      fail-fast: true
    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Setup PHP and composer dependencies
        uses: './.github/actions/php-composer-setup'
        with:
          php-version: ${{ matrix.php-version }}
          composer-working-directory: 'red'
          php-extensions: ${{ env.PHP_EXTENSIONS }}
          extensions-cache-key:  ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
          use-php-extensions-cache: ${{ env.USE_PHP_EXTENSION_CACHE }}
          use-composer-cache: ${{ env.USE_COMPOSER_CACHE }}
          composer-install-args: '--no-interaction --prefer-dist --no-progress --ansi'

      - name: Install psalm
        run: |
          composer bin psalm install  --no-progress --ansi

      - name: Create symfony container for psalm
        run: ./bin/console debug:container -e dev

      - name: Run psalm
        run: ./vendor/bin/psalm -c psalm.xml --no-cache


  rector:
    name: Rector (MAINTENANCE) (${{ matrix.php-version }})
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    strategy:
      matrix:
        php-version:
          - '8.1'
      fail-fast: true

    steps:
      - name: Checkout on SHA-${{ inputs.triggering-sha }}
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.triggering-sha }}

      - name: Setup PHP and composer dependencies
        uses: './.github/actions/php-composer-setup'
        with:
          php-version: ${{ matrix.php-version }}
          composer-working-directory: 'red'
          php-extensions: ${{ env.PHP_EXTENSIONS }}
          extensions-cache-key:  ${{ env.PHP_EXTENSIONS_CACHE_KEY }}
          use-php-extensions-cache: ${{ env.USE_PHP_EXTENSION_CACHE }}
          use-composer-cache: ${{ env.USE_COMPOSER_CACHE }}
          composer-install-args: '--no-interaction --prefer-dist --no-progress --ansi'

      - name: Install rector
        run: composer bin rector install --no-progress --ansi

      - name: Create symfony container for rector
        run: ./bin/console debug:container -e dev

      - name: Run rector
        run: ./vendor/bin/rector process --dry-run --ansi

