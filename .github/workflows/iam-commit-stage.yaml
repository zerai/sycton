name: Blu - Commit stage

on:
  push:
    paths:
      - "iam/**"
  pull_request:
    paths:
      - "iam/**"


env:
  PHP_EXTENSIONS: ctype, iconv, json, curl, gd, intl, opcache, openssl, mbstring, mysql, pdo_sqlite
  PHP_EXTENSIONS_CACHE_KEY: cache-php-extensions-v1


jobs:
  lint-composer:
    runs-on: ubuntu-18.04
    timeout-minutes: 5
    strategy:
      matrix:
        php:
          - '8.0'
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup php extension cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache PHP extensions
        uses: actions/cache@v2.1.7
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@2.15.0
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: composer, composer-normalize:2.16.0

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2.1.7
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-php${{ matrix.php }}-composer-
        continue-on-error: true

      - name: Install Composer dependencies
        run: |
          cd iam/
          composer install --prefer-dist --no-progress --ansi --no-scripts

      - name: Run composer validate
        run: |
          cd iam/
          composer validate --strict --ansi

      - name: Run composer normalize
        run: |
          cd iam/
          composer-normalize --dry-run --ansi


  symfony-test:
    runs-on: ubuntu-18.04
    services:
      pgsql:
        image: postgres:13-alpine
        env:
          POSTGRES_DB: ci-db_test
          POSTGRES_PASSWORD: ci-db-password
          POSTGRES_USER: ci-db-user
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    strategy:
      matrix:
        php:
          - '8.0'
      fail-fast: true

    steps:
      - uses: actions/checkout@v2

      - name: Setup cache environment
        id: cache-php-extensions
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ env.PHP_EXTENSIONS_CACHE_KEY }}

      - name: Cache extensions
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache-php-extensions.outputs.dir }}
          key: ${{ steps.cache-php-extensions.outputs.key }}
          restore-keys: ${{ steps.cache-php-extensions.outputs.key }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: memory_limit=-1
          coverage: none
          tools: symfony

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-${{ matrix.php }}

      - name: Install Composer dependencies
        run: |
          cd iam/
          composer install --prefer-dist --no-progress --ansi --no-scripts

#      - name: Setup Database (schema & migration)
#        run: |
#          php bin/console doctrine:schema:update --force -e test
#          php bin/console doctrine:migrations:migrate -e test --allow-no-migration --no-interaction
#        env:
#          DATABASE_URL: postgresql://ci-db-user:ci-db-password@127.0.0.1:${{ job.services.pgsql.ports['5432'] }}/ci-db

      - name: Run webserver
        run: symfony server:start --port=8080 --dir=public --daemon --no-tls

      - name: Run test suite
        run: |
          cd iam/
          ./vendor/bin/phpunit
        env:
          SYMFONY_DEPRECATIONS_HELPER: disabled
#          DATABASE_URL: postgresql://ci-db-user:ci-db-password@127.0.0.1:${{ job.services.pgsql.ports['5432'] }}/ci-db